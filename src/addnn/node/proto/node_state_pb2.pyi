"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class NodeState(google.protobuf.message.Message):
    """Represents the state of an ADDNN compute node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_STATE_FIELD_NUMBER: builtins.int
    NEURAL_NETWORK_STATE_FIELD_NUMBER: builtins.int
    @property
    def resource_state(self) -> global___ResourceState:
        """The resource state of the node."""
        pass
    @property
    def neural_network_state(self) -> global___NeuralNetworkState:
        """The state of neural network that is hosted by the node."""
        pass
    def __init__(self,
        *,
        resource_state : typing.Optional[global___ResourceState] = ...,
        neural_network_state : typing.Optional[global___NeuralNetworkState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"neural_network_state",b"neural_network_state",u"resource_state",b"resource_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"neural_network_state",b"neural_network_state",u"resource_state",b"resource_state"]) -> None: ...
global___NodeState = NodeState

class ResourceState(google.protobuf.message.Message):
    """Represents the resource state of an ADDNN compute node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MEMORY_FIELD_NUMBER: builtins.int
    STORAGE_FIELD_NUMBER: builtins.int
    COMPUTE_FIELD_NUMBER: builtins.int
    BANDWIDTH_FIELD_NUMBER: builtins.int
    NETWORK_THROUGHPUTS_FIELD_NUMBER: builtins.int
    NETWORK_LATENCIES_FIELD_NUMBER: builtins.int
    memory: builtins.int = ...
    """The available RAM in bytes."""

    storage: builtins.int = ...
    """The available storage in bytes."""

    compute: builtins.int = ...
    """The available compute capacity in FLOPS."""

    bandwidth: builtins.int = ...
    """The available bandwidth in bytes/sec."""

    @property
    def network_throughputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkThroughput]:
        """The network throughputs to the node's neighbours."""
        pass
    @property
    def network_latencies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkLatency]:
        """The network latencies to the node's neighbours."""
        pass
    def __init__(self,
        *,
        memory : builtins.int = ...,
        storage : builtins.int = ...,
        compute : builtins.int = ...,
        bandwidth : builtins.int = ...,
        network_throughputs : typing.Optional[typing.Iterable[global___NetworkThroughput]] = ...,
        network_latencies : typing.Optional[typing.Iterable[global___NetworkLatency]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"bandwidth",b"bandwidth",u"compute",b"compute",u"memory",b"memory",u"network_latencies",b"network_latencies",u"network_throughputs",b"network_throughputs",u"storage",b"storage"]) -> None: ...
global___ResourceState = ResourceState

class NetworkThroughput(google.protobuf.message.Message):
    """The throughput between an ADDNN compute node and a specific neighbour node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_FIELD_NUMBER: builtins.int
    THROUGHPUT_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """Host or IP of the neighbour node."""

    throughput: builtins.int = ...
    """The throughput in bits/second."""

    def __init__(self,
        *,
        host : typing.Text = ...,
        throughput : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"host",b"host",u"throughput",b"throughput"]) -> None: ...
global___NetworkThroughput = NetworkThroughput

class NetworkLatency(google.protobuf.message.Message):
    """The latency between an ADDNN compute node and a specific neighbour node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_FIELD_NUMBER: builtins.int
    LATENCY_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """Host or IP of the neighbour node."""

    latency: builtins.float = ...
    """The latency in milliseconds."""

    def __init__(self,
        *,
        host : typing.Text = ...,
        latency : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"host",b"host",u"latency",b"latency"]) -> None: ...
global___NetworkLatency = NetworkLatency

class NeuralNetworkState(google.protobuf.message.Message):
    """The state of a neural network on its compute node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_STATES_FIELD_NUMBER: builtins.int
    @property
    def layer_states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LayerState]: ...
    def __init__(self,
        *,
        layer_states : typing.Optional[typing.Iterable[global___LayerState]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"layer_states",b"layer_states"]) -> None: ...
global___NeuralNetworkState = NeuralNetworkState

class LayerState(google.protobuf.message.Message):
    """The state of a layer on its compute node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_INDEX_FIELD_NUMBER: builtins.int
    NUMBER_OF_EXITED_SAMPLES_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    layer_index: builtins.int = ...
    """The index of the layer that uniquely identifies the layer within the neural network."""

    number_of_exited_samples: builtins.int = ...
    """The number of samples that exited at this layer."""

    active: builtins.bool = ...
    """Whether the layer is currently active at that node."""

    def __init__(self,
        *,
        layer_index : builtins.int = ...,
        number_of_exited_samples : builtins.int = ...,
        active : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"active",b"active",u"layer_index",b"layer_index",u"number_of_exited_samples",b"number_of_exited_samples"]) -> None: ...
global___LayerState = LayerState
