"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import addnn.controller.proto.controller_pb2
import google.protobuf.empty_pb2
import grpc

class ControllerStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    RegisterNode: grpc.UnaryUnaryMultiCallable[
        addnn.controller.proto.controller_pb2.RegisterNodeRequest,
        google.protobuf.empty_pb2.Empty] = ...
    """Register a compute node at the controller."""

    DeregisterNode: grpc.UnaryUnaryMultiCallable[
        addnn.controller.proto.controller_pb2.DeregisterNodeRequest,
        google.protobuf.empty_pb2.Empty] = ...
    """Deregisters a compute node at the controller."""

    UpdateNodeState: grpc.UnaryUnaryMultiCallable[
        addnn.controller.proto.controller_pb2.UpdateNodeStateRequest,
        google.protobuf.empty_pb2.Empty] = ...
    """Update the state of a registrered compute node at the controller."""

    ListNodes: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        addnn.controller.proto.controller_pb2.ListNodesResponse] = ...
    """Lists all nodes that are currently registered at the controller."""


class ControllerServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def RegisterNode(self,
        request: addnn.controller.proto.controller_pb2.RegisterNodeRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Register a compute node at the controller."""
        pass

    @abc.abstractmethod
    def DeregisterNode(self,
        request: addnn.controller.proto.controller_pb2.DeregisterNodeRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Deregisters a compute node at the controller."""
        pass

    @abc.abstractmethod
    def UpdateNodeState(self,
        request: addnn.controller.proto.controller_pb2.UpdateNodeStateRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Update the state of a registrered compute node at the controller."""
        pass

    @abc.abstractmethod
    def ListNodes(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> addnn.controller.proto.controller_pb2.ListNodesResponse:
        """Lists all nodes that are currently registered at the controller."""
        pass


def add_ControllerServicer_to_server(servicer: ControllerServicer, server: grpc.Server) -> None: ...
